# FILE MANAGED BY ANSIBLE : DO NOT EDIT !!!
# {{ ansible_managed }}
{% set vhost_params = item.value %}
{% set ssl_enabled   = vhost_params.ssl is defined and vhost_params.ssl.enabled|default(false) %}

server {
    server_name {{ vhost_params.server_name }} {% for alias in vhost_params.server_aliases|default([]) %}{{ alias }} {% endfor %} ;

    listen {{ nginx_port }} {% if nginx_use_http2 %}http2{% endif %};
{% if ssl_enabled %}
    listen {{ nginx_ssl_port }} ssl {% if nginx_use_http2 %}http2{% endif %};
    ssl_certificate {{ vhost_params.ssl.certificate_file }};
    ssl_certificate_key {{ vhost_params.ssl.certificate_key_file }};
{% endif %}

    location /{{ vhost_params.admin_url }} {
        # Forwarded to varnish on {{ vhost_params.admin_redirect_host }} port {{ vhost_params.admin_redirect_port }}
        proxy_pass http://{{ vhost_params.admin_redirect_host }}:{{ vhost_params.admin_redirect_port }}/{{ vhost_params.admin_url }};
        proxy_set_header Host $host;

{% if vhost_params.override_x_forwarded_for %}
        # Overwrite X-Forwarded-For with actual client IP
        proxy_set_header X-Forwarded-For $remote_addr;
{% endif %}

{% if vhost_params.override_x_forwarded_proto %}
        # to let webapp know it's https traffic.
        proxy_set_header X-Forwarded-Proto $scheme;
{% endif %}
    }

    location / {
        # Forwarded to varnish on {{ vhost_params.redirect_host }} port {{ vhost_params.redirect_port }}
        proxy_pass http://{{ vhost_params.redirect_host }}:{{ vhost_params.redirect_port }}/;
        proxy_set_header Host $host;

{% if vhost_params.override_x_forwarded_for %}
        # Overwrite X-Forwarded-For with actual client IP
        proxy_set_header X-Forwarded-For $remote_addr;
{% endif %}

{% if vhost_params.override_x_forwarded_proto %}
        # to let webapp know it's https traffic.
        proxy_set_header X-Forwarded-Proto $scheme;
{% endif %}
    }
}
